#!/bin/bash

#CADB utility, a set of commands to make Chrome OS adb commands easier.

#First run
if [ ! -f ~/.config/cadb/prefs/firstrun/false ]; then
    #Make application directories
    mkdir ~/.config/cadb >/dev/null 2>&1
    #Deprecated sudo
    #if [ $? -gt 0 ]; then
         #echo "Please run as root for the first run."
         #exit
    #fi
    mkdir ~/.config/cadb/prefs >/dev/null 2>&1

    #Create ~/APKs folder
    echo "First run, creating APK folder. Put future APKs in this folder (~/APKs)"
    mkdir ~/APKs >/dev/null 2>&1
    mkdir ~/.config/cadb/prefs/firstrun >/dev/null 2>&1
    touch ~/.config/cadb/prefs/firstrun/false >/dev/null 2>&1
    echo "Initial config done"
    echo "Exiting..."
    exit
fi
#Check command executed
if [[ $1 = "shell" ]]; then
    adb devices >/dev/null 2>&1
    adb -s emulator-5554 shell
    if [ $? -gt 0 ]; then
	echo "Connection failed"
	exit
    fi
    exit
fi

if [[ $1 = "connect" ]]; then
    adb connect 101.115.92.2:5555 >/dev/null 2>&1
    if [ $? -gt 0 ]; then
	echo "Connection failed"
	exit
    fi
    echo "Connection successful"
    exit
fi

if [[ $1 = "install" ]]; then
    #Note: install first looks for apks in the current directory, then ~/APKs/, 
    #then the downloads folder if it has access
    if [ -z "$2" ]; then
	echo "No .apk file specified"
	exit
    fi
    adb -s emulator-5554 install "$2" >/dev/null 2>&1 || adb -s emulator-5554 install ~/APKs/$2 >/dev/null 2>&1 || adb -s emulator-5554 install /mnt/chromeos/MyFiles/Downloads/$2 >/dev/null 2>&1
    if [ $? -gt 0 ]; then
	echo "Install failed"
	exit
    fi
    echo "Installed"
    exit
fi

if [[ $1 = "status" ]]; then
    adb devices | grep emulator-5554
    if [ $? -gt 0 ]; then
	echo "ARC++ Disconnected"
	exit
    fi
    echo "ARC++ Connected"
    exit
fi

if [[ $1 = "setpref-firstrun" ]]; then
    if [ "$EUID" -ne 0 ]
	then echo "Please run as root to change preferences."
  	exit
    fi

    if [[ $2 = "false" ]]; then
	sudo rm -rf /usr/share/cadb/prefs/firstrun/true >/dev/null 2>&1
	sudo touch /usr/share/cadb/prefs/firstrun/false >/dev/null 2>&1
	exit
    fi
    if [[ $2 = "true" ]]; then
	sudo rm -rf /usr/share/cadb/prefs/fistrun/false >/dev/null 2>&1
	sudo touch /usr/share/cadb/prefs/firstrun/true >/dev/null 2>&1
	exit
    fi
    if [ -z "$2" ]; then
	echo "Syntax:"
	echo "sudo setpref-prefname true/false"
	exit
    fi
echo "Syntax:"
echo "sudo setpref-prefname true/false"
fi

if [[ $1 = "-?" ]]; then
    echo "CADB utility v1.2"
    echo "Author: Dolfies"
    echo "Support: github.com/dolfies/cadb"
    echo "This utility only works if you have enabled ADB Debugging in Settings"
    printf "\n"
    echo "Usage: cadb command"
    echo "       cadb command {options}"
    printf "\n"
    echo "Commands:"
    echo "connect - Connects to the ARC+ container."
    echo "install - Installs specified .apk file. Checks in current dir, in ~/APKs, and in the Downloads folder, if it's shared."
    echo "shell   - Starts an adb shell on the ARC++ container."
    echo "status  - Shows if you're connected to the ARC++ shell via adb."
    echo "setpref - Changes a preference."
    exit
fi

if [[ $1 = "--help" ]]; then
    echo "CADB utility v1.3"
    echo "Author: Dolfies"
    echo "Support: github.com/dolfies/cadb"
    echo "This utility only works if you have enabled ADB Debugging in Settings"
    printf "\n"
    echo "Usage: cadb command"
    echo "       cadb command {options}"
    printf "\n"
    echo "Commands:"
    echo "connect - Connects to the ARC+ container."
    echo "install - Installs specified .apk file. Checks in current dir, in ~/APKs, and in the Downloads folder, if it's shared."
    echo "shell   - Starts an adb shell on the ARC++ container."
    echo "status  - Shows if you're connected to the ARC++ shell via adb."
    echo "setpref - Changes a preference."
    exit
fi

    echo "CADB utility v1.3"
    echo "Author: u/dolfies_person"
    echo "This utility only works if you have enabled ADB Debugging in Settings"
    printf "\n"
    echo "Usage: cadb command"
    echo "       cadb command {options}"
    printf "\n"
    echo "Commands:"
    echo "connect - Connects to the ARC+ container."
    echo "install - Installs specified .apk file. Checks in current dir, in ~/APKs, and in the Downloads folder, if it's shared."
    echo "shell   - Starts an adb shell on the ARC++ container."
    echo "status  - Shows if you're connected to the ARC++ shell via adb."
